# name: Deploy Node Application

# on: 
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Source
#         uses: actions/checkout@v4
#       - name: Login to docker hub
#         run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}     
#       - name: Build Docker Image
#         run: docker build -t shakilpro/youtubenode-frontend-app --build-arg REACT_APP_NODE_ENV='production' --build-arg REACT_APP_SERVER_BASE_URL='${{ secrets.REACT_APP_SERVER_BASE_URL }}'  .
#       - name: Publish Image to docker hub
#         run: docker push shakilpro/youtubenode-frontend-app:latest 
 
#   deploy:
#     needs: build
#     runs-on: self-hosted 
#     steps:
#       - name: Pull image from docker hub
#         run: docker pull shakilpro/youtubenode-frontend-app:latest 
#       - name: Delete old container
#         run: docker rm -f reactjs-app-container
#       - name: Run Docker Container
#         run: docker run -d -p 3000:80 --name reactjs-app-container shakilpro/youtubenode-frontend-app



name: youtube-deployment-aws-cicd-frontend


on:
 push:
   branches:
     - main


jobs:
 build:
   runs-on: ubuntu-latest
   steps:
     - name: Checkout Source
       uses: actions/checkout@v4


    
     - name: Use Node.js 20
       uses: actions/setup-node@v3
       
       with:
         node-version: '20'  # Specify the Node.js version


     - name: Install dependencies
       run: npm ci


     - name: Build Docker Image
       run: docker build -t shakilpro/youtubenode-frontend:latest .


     - name: Push Docker Image to Docker Hub
       run: |
         echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
         docker push shakilpro/youtubenode-frontend:latest


 deploy:
  runs-on: self-hosted
  needs: build
  steps:
    - name: Checkout Source
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Pull Image from Docker Hub
      run: docker pull shakilpro/youtubenode-frontend:latest

    - name: Stop and remove existing container (if exists)
      run: |
        docker stop youtubenode-frontend-container || true
        docker rm youtubenode-frontend-container || true

    - name: Run Docker Container
      run: docker run -d -p 3000:80 --name youtubenode-frontend-container shakilpro/youtubenode-frontend:latest
